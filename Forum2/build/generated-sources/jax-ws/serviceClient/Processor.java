
package serviceClient;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "processor", targetNamespace = "http://serviceServer/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Processor {


    /**
     * 
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTotalCommentCount", targetNamespace = "http://serviceServer/", className = "serviceClient.GetTotalCommentCount")
    @ResponseWrapper(localName = "getTotalCommentCountResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.GetTotalCommentCountResponse")
    @Action(input = "http://serviceServer/processor/getTotalCommentCountRequest", output = "http://serviceServer/processor/getTotalCommentCountResponse")
    public int getTotalCommentCount();

    /**
     * 
     * @param commentAuthor
     * @param commentID
     * @param postID
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findCommentIdentity", targetNamespace = "http://serviceServer/", className = "serviceClient.FindCommentIdentity")
    @ResponseWrapper(localName = "findCommentIdentityResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.FindCommentIdentityResponse")
    @Action(input = "http://serviceServer/processor/findCommentIdentityRequest", output = "http://serviceServer/processor/findCommentIdentityResponse")
    public int findCommentIdentity(
        @WebParam(name = "commentID", targetNamespace = "")
        int commentID,
        @WebParam(name = "commentAuthor", targetNamespace = "")
        String commentAuthor,
        @WebParam(name = "postID", targetNamespace = "")
        int postID);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCommentAuthors", targetNamespace = "http://serviceServer/", className = "serviceClient.GetCommentAuthors")
    @ResponseWrapper(localName = "getCommentAuthorsResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.GetCommentAuthorsResponse")
    @Action(input = "http://serviceServer/processor/getCommentAuthorsRequest", output = "http://serviceServer/processor/getCommentAuthorsResponse")
    public List<String> getCommentAuthors();

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCommentDescription", targetNamespace = "http://serviceServer/", className = "serviceClient.GetCommentDescription")
    @ResponseWrapper(localName = "getCommentDescriptionResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.GetCommentDescriptionResponse")
    @Action(input = "http://serviceServer/processor/getCommentDescriptionRequest", output = "http://serviceServer/processor/getCommentDescriptionResponse")
    public List<String> getCommentDescription();

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getReplyDescriptions", targetNamespace = "http://serviceServer/", className = "serviceClient.GetReplyDescriptions")
    @ResponseWrapper(localName = "getReplyDescriptionsResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.GetReplyDescriptionsResponse")
    @Action(input = "http://serviceServer/processor/getReplyDescriptionsRequest", output = "http://serviceServer/processor/getReplyDescriptionsResponse")
    public List<String> getReplyDescriptions();

    /**
     * 
     * @param postID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPostDesciption", targetNamespace = "http://serviceServer/", className = "serviceClient.GetPostDesciption")
    @ResponseWrapper(localName = "getPostDesciptionResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.GetPostDesciptionResponse")
    @Action(input = "http://serviceServer/processor/getPostDesciptionRequest", output = "http://serviceServer/processor/getPostDesciptionResponse")
    public String getPostDesciption(
        @WebParam(name = "postID", targetNamespace = "")
        int postID);

    /**
     * 
     * @param password
     * @param username
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteAccount", targetNamespace = "http://serviceServer/", className = "serviceClient.DeleteAccount")
    @ResponseWrapper(localName = "deleteAccountResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.DeleteAccountResponse")
    @Action(input = "http://serviceServer/processor/deleteAccountRequest", output = "http://serviceServer/processor/deleteAccountResponse")
    public int deleteAccount(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUserA", targetNamespace = "http://serviceServer/", className = "serviceClient.GetUserA")
    @ResponseWrapper(localName = "getUserAResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.GetUserAResponse")
    @Action(input = "http://serviceServer/processor/getUserARequest", output = "http://serviceServer/processor/getUserAResponse")
    public String getUserA();

    /**
     * 
     * @param newEmail
     * @param username
     */
    @WebMethod
    @RequestWrapper(localName = "changeEmail", targetNamespace = "http://serviceServer/", className = "serviceClient.ChangeEmail")
    @ResponseWrapper(localName = "changeEmailResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.ChangeEmailResponse")
    @Action(input = "http://serviceServer/processor/changeEmailRequest", output = "http://serviceServer/processor/changeEmailResponse")
    public void changeEmail(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "newEmail", targetNamespace = "")
        String newEmail);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAuthors", targetNamespace = "http://serviceServer/", className = "serviceClient.GetAuthors")
    @ResponseWrapper(localName = "getAuthorsResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.GetAuthorsResponse")
    @Action(input = "http://serviceServer/processor/getAuthorsRequest", output = "http://serviceServer/processor/getAuthorsResponse")
    public List<String> getAuthors();

    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "makeConnection", targetNamespace = "http://serviceServer/", className = "serviceClient.MakeConnection")
    @ResponseWrapper(localName = "makeConnectionResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.MakeConnectionResponse")
    @Action(input = "http://serviceServer/processor/makeConnectionRequest", output = "http://serviceServer/processor/makeConnectionResponse")
    public void makeConnection();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUserQ", targetNamespace = "http://serviceServer/", className = "serviceClient.GetUserQ")
    @ResponseWrapper(localName = "getUserQResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.GetUserQResponse")
    @Action(input = "http://serviceServer/processor/getUserQRequest", output = "http://serviceServer/processor/getUserQResponse")
    public String getUserQ();

    /**
     * 
     * @param question
     * @param answer
     * @param email
     * @param username
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "resetPassword", targetNamespace = "http://serviceServer/", className = "serviceClient.ResetPassword")
    @ResponseWrapper(localName = "resetPasswordResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.ResetPasswordResponse")
    @Action(input = "http://serviceServer/processor/resetPasswordRequest", output = "http://serviceServer/processor/resetPasswordResponse")
    public int resetPassword(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "question", targetNamespace = "")
        String question,
        @WebParam(name = "answer", targetNamespace = "")
        String answer);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getReplyAuthors", targetNamespace = "http://serviceServer/", className = "serviceClient.GetReplyAuthors")
    @ResponseWrapper(localName = "getReplyAuthorsResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.GetReplyAuthorsResponse")
    @Action(input = "http://serviceServer/processor/getReplyAuthorsRequest", output = "http://serviceServer/processor/getReplyAuthorsResponse")
    public List<String> getReplyAuthors();

    /**
     * 
     * @param postID
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCommentCount", targetNamespace = "http://serviceServer/", className = "serviceClient.GetCommentCount")
    @ResponseWrapper(localName = "getCommentCountResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.GetCommentCountResponse")
    @Action(input = "http://serviceServer/processor/getCommentCountRequest", output = "http://serviceServer/processor/getCommentCountResponse")
    public int getCommentCount(
        @WebParam(name = "postID", targetNamespace = "")
        int postID);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCommentTimes", targetNamespace = "http://serviceServer/", className = "serviceClient.GetCommentTimes")
    @ResponseWrapper(localName = "getCommentTimesResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.GetCommentTimesResponse")
    @Action(input = "http://serviceServer/processor/getCommentTimesRequest", output = "http://serviceServer/processor/getCommentTimesResponse")
    public List<String> getCommentTimes();

    /**
     * 
     * @param commentAuthor
     * @param commentDesc
     * @param postID
     */
    @WebMethod
    @RequestWrapper(localName = "addComment", targetNamespace = "http://serviceServer/", className = "serviceClient.AddComment")
    @ResponseWrapper(localName = "addCommentResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.AddCommentResponse")
    @Action(input = "http://serviceServer/processor/addCommentRequest", output = "http://serviceServer/processor/addCommentResponse")
    public void addComment(
        @WebParam(name = "commentAuthor", targetNamespace = "")
        String commentAuthor,
        @WebParam(name = "commentDesc", targetNamespace = "")
        String commentDesc,
        @WebParam(name = "postID", targetNamespace = "")
        int postID);

    /**
     * 
     * @param username
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "countReplies", targetNamespace = "http://serviceServer/", className = "serviceClient.CountReplies")
    @ResponseWrapper(localName = "countRepliesResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.CountRepliesResponse")
    @Action(input = "http://serviceServer/processor/countRepliesRequest", output = "http://serviceServer/processor/countRepliesResponse")
    public int countReplies(
        @WebParam(name = "username", targetNamespace = "")
        String username);

    /**
     * 
     * @param topicName
     */
    @WebMethod
    @RequestWrapper(localName = "getPostsData", targetNamespace = "http://serviceServer/", className = "serviceClient.GetPostsData")
    @ResponseWrapper(localName = "getPostsDataResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.GetPostsDataResponse")
    @Action(input = "http://serviceServer/processor/getPostsDataRequest", output = "http://serviceServer/processor/getPostsDataResponse")
    public void getPostsData(
        @WebParam(name = "topicName", targetNamespace = "")
        String topicName);

    /**
     * 
     * @param topicName
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPostCount", targetNamespace = "http://serviceServer/", className = "serviceClient.GetPostCount")
    @ResponseWrapper(localName = "getPostCountResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.GetPostCountResponse")
    @Action(input = "http://serviceServer/processor/getPostCountRequest", output = "http://serviceServer/processor/getPostCountResponse")
    public int getPostCount(
        @WebParam(name = "topicName", targetNamespace = "")
        String topicName);

    /**
     * 
     * @param topicID
     * @param subject
     * @param author
     * @param text
     */
    @WebMethod
    @RequestWrapper(localName = "addPost", targetNamespace = "http://serviceServer/", className = "serviceClient.AddPost")
    @ResponseWrapper(localName = "addPostResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.AddPostResponse")
    @Action(input = "http://serviceServer/processor/addPostRequest", output = "http://serviceServer/processor/addPostResponse")
    public void addPost(
        @WebParam(name = "subject", targetNamespace = "")
        String subject,
        @WebParam(name = "text", targetNamespace = "")
        String text,
        @WebParam(name = "author", targetNamespace = "")
        String author,
        @WebParam(name = "topicID", targetNamespace = "")
        int topicID);

    /**
     * 
     * @param postID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findPostAuthor", targetNamespace = "http://serviceServer/", className = "serviceClient.FindPostAuthor")
    @ResponseWrapper(localName = "findPostAuthorResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.FindPostAuthorResponse")
    @Action(input = "http://serviceServer/processor/findPostAuthorRequest", output = "http://serviceServer/processor/findPostAuthorResponse")
    public String findPostAuthor(
        @WebParam(name = "postID", targetNamespace = "")
        int postID);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSubjects", targetNamespace = "http://serviceServer/", className = "serviceClient.GetSubjects")
    @ResponseWrapper(localName = "getSubjectsResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.GetSubjectsResponse")
    @Action(input = "http://serviceServer/processor/getSubjectsRequest", output = "http://serviceServer/processor/getSubjectsResponse")
    public List<String> getSubjects();

    /**
     * 
     * @param postID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPostDateTime", targetNamespace = "http://serviceServer/", className = "serviceClient.GetPostDateTime")
    @ResponseWrapper(localName = "getPostDateTimeResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.GetPostDateTimeResponse")
    @Action(input = "http://serviceServer/processor/getPostDateTimeRequest", output = "http://serviceServer/processor/getPostDateTimeResponse")
    public String getPostDateTime(
        @WebParam(name = "postID", targetNamespace = "")
        int postID);

    /**
     * 
     * @param topicName
     * @param postID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPostTitle", targetNamespace = "http://serviceServer/", className = "serviceClient.GetPostTitle")
    @ResponseWrapper(localName = "getPostTitleResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.GetPostTitleResponse")
    @Action(input = "http://serviceServer/processor/getPostTitleRequest", output = "http://serviceServer/processor/getPostTitleResponse")
    public String getPostTitle(
        @WebParam(name = "topicName", targetNamespace = "")
        String topicName,
        @WebParam(name = "postID", targetNamespace = "")
        int postID);

    /**
     * 
     * @param username
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUserEmail", targetNamespace = "http://serviceServer/", className = "serviceClient.GetUserEmail")
    @ResponseWrapper(localName = "getUserEmailResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.GetUserEmailResponse")
    @Action(input = "http://serviceServer/processor/getUserEmailRequest", output = "http://serviceServer/processor/getUserEmailResponse")
    public String getUserEmail(
        @WebParam(name = "username", targetNamespace = "")
        String username);

    /**
     * 
     * @param topicName
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTopicID", targetNamespace = "http://serviceServer/", className = "serviceClient.GetTopicID")
    @ResponseWrapper(localName = "getTopicIDResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.GetTopicIDResponse")
    @Action(input = "http://serviceServer/processor/getTopicIDRequest", output = "http://serviceServer/processor/getTopicIDResponse")
    public int getTopicID(
        @WebParam(name = "topicName", targetNamespace = "")
        String topicName);

    /**
     * 
     * @param username
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "countComments", targetNamespace = "http://serviceServer/", className = "serviceClient.CountComments")
    @ResponseWrapper(localName = "countCommentsResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.CountCommentsResponse")
    @Action(input = "http://serviceServer/processor/countCommentsRequest", output = "http://serviceServer/processor/countCommentsResponse")
    public int countComments(
        @WebParam(name = "username", targetNamespace = "")
        String username);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.Integer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPostID", targetNamespace = "http://serviceServer/", className = "serviceClient.GetPostID")
    @ResponseWrapper(localName = "getPostIDResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.GetPostIDResponse")
    @Action(input = "http://serviceServer/processor/getPostIDRequest", output = "http://serviceServer/processor/getPostIDResponse")
    public List<Integer> getPostID();

    /**
     * 
     * @param question
     * @param answer
     * @param username
     */
    @WebMethod
    @RequestWrapper(localName = "updateSQA", targetNamespace = "http://serviceServer/", className = "serviceClient.UpdateSQA")
    @ResponseWrapper(localName = "updateSQAResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.UpdateSQAResponse")
    @Action(input = "http://serviceServer/processor/updateSQARequest", output = "http://serviceServer/processor/updateSQAResponse")
    public void updateSQA(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "question", targetNamespace = "")
        String question,
        @WebParam(name = "answer", targetNamespace = "")
        String answer);

    /**
     * 
     * @param postID
     */
    @WebMethod
    @RequestWrapper(localName = "getCommentsData", targetNamespace = "http://serviceServer/", className = "serviceClient.GetCommentsData")
    @ResponseWrapper(localName = "getCommentsDataResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.GetCommentsDataResponse")
    @Action(input = "http://serviceServer/processor/getCommentsDataRequest", output = "http://serviceServer/processor/getCommentsDataResponse")
    public void getCommentsData(
        @WebParam(name = "postID", targetNamespace = "")
        int postID);

    /**
     * 
     * @param commentIdentity
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getReplyCount", targetNamespace = "http://serviceServer/", className = "serviceClient.GetReplyCount")
    @ResponseWrapper(localName = "getReplyCountResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.GetReplyCountResponse")
    @Action(input = "http://serviceServer/processor/getReplyCountRequest", output = "http://serviceServer/processor/getReplyCountResponse")
    public int getReplyCount(
        @WebParam(name = "commentIdentity", targetNamespace = "")
        int commentIdentity);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getReplyTimes", targetNamespace = "http://serviceServer/", className = "serviceClient.GetReplyTimes")
    @ResponseWrapper(localName = "getReplyTimesResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.GetReplyTimesResponse")
    @Action(input = "http://serviceServer/processor/getReplyTimesRequest", output = "http://serviceServer/processor/getReplyTimesResponse")
    public List<String> getReplyTimes();

    /**
     * 
     * @param commentIdentity
     */
    @WebMethod
    @RequestWrapper(localName = "getReplyData", targetNamespace = "http://serviceServer/", className = "serviceClient.GetReplyData")
    @ResponseWrapper(localName = "getReplyDataResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.GetReplyDataResponse")
    @Action(input = "http://serviceServer/processor/getReplyDataRequest", output = "http://serviceServer/processor/getReplyDataResponse")
    public void getReplyData(
        @WebParam(name = "commentIdentity", targetNamespace = "")
        int commentIdentity);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.Integer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCommentIDs", targetNamespace = "http://serviceServer/", className = "serviceClient.GetCommentIDs")
    @ResponseWrapper(localName = "getCommentIDsResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.GetCommentIDsResponse")
    @Action(input = "http://serviceServer/processor/getCommentIDsRequest", output = "http://serviceServer/processor/getCommentIDsResponse")
    public List<Integer> getCommentIDs();

    /**
     * 
     * @param commentIdentity
     * @param author
     * @param text
     */
    @WebMethod
    @RequestWrapper(localName = "addReply", targetNamespace = "http://serviceServer/", className = "serviceClient.AddReply")
    @ResponseWrapper(localName = "addReplyResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.AddReplyResponse")
    @Action(input = "http://serviceServer/processor/addReplyRequest", output = "http://serviceServer/processor/addReplyResponse")
    public void addReply(
        @WebParam(name = "text", targetNamespace = "")
        String text,
        @WebParam(name = "author", targetNamespace = "")
        String author,
        @WebParam(name = "commentIdentity", targetNamespace = "")
        int commentIdentity);

    /**
     * 
     * @param password
     * @param username
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "doesUserExist", targetNamespace = "http://serviceServer/", className = "serviceClient.DoesUserExist")
    @ResponseWrapper(localName = "doesUserExistResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.DoesUserExistResponse")
    @Action(input = "http://serviceServer/processor/doesUserExistRequest", output = "http://serviceServer/processor/doesUserExistResponse")
    public int doesUserExist(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param username
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "countPosts", targetNamespace = "http://serviceServer/", className = "serviceClient.CountPosts")
    @ResponseWrapper(localName = "countPostsResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.CountPostsResponse")
    @Action(input = "http://serviceServer/processor/countPostsRequest", output = "http://serviceServer/processor/countPostsResponse")
    public int countPosts(
        @WebParam(name = "username", targetNamespace = "")
        String username);

    /**
     * 
     * @param q
     * @param a
     * @param password
     * @param email
     * @param username
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addUser", targetNamespace = "http://serviceServer/", className = "serviceClient.AddUser")
    @ResponseWrapper(localName = "addUserResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.AddUserResponse")
    @Action(input = "http://serviceServer/processor/addUserRequest", output = "http://serviceServer/processor/addUserResponse")
    public int addUser(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "q", targetNamespace = "")
        String q,
        @WebParam(name = "a", targetNamespace = "")
        String a);

    /**
     * 
     * @param password
     * @param username
     */
    @WebMethod
    @RequestWrapper(localName = "changePassword", targetNamespace = "http://serviceServer/", className = "serviceClient.ChangePassword")
    @ResponseWrapper(localName = "changePasswordResponse", targetNamespace = "http://serviceServer/", className = "serviceClient.ChangePasswordResponse")
    @Action(input = "http://serviceServer/processor/changePasswordRequest", output = "http://serviceServer/processor/changePasswordResponse")
    public void changePassword(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password);

}
